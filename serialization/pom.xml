<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- This is persistence pom.xml -->
    <parent>
        <groupId>io.mercury</groupId>
        <artifactId>mercury</artifactId>
        <version>1.0.1</version>
    </parent>

    <artifactId>serialization</artifactId>
    <name>serialization</name>
    <packaging>pom</packaging>

    <modules>
        <module>serialization-avro</module>
        <module>serialization-fury</module>
        <module>serialization-json</module>
        <module>serialization-kryo</module>
        <module>serialization-protobuf</module>
        <module>serialization-sbe</module>
        <!--<module>serialization-wire</module>-->
    </modules>

    <properties>
        <commons-compress.version>1.26.2</commons-compress.version>
        <lz4-java.version>1.8.0</lz4-java.version>
        <snappy-java.version>1.1.10.5</snappy-java.version>
        <zstd-jni.version>1.5.6-3</zstd-jni.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerArgument>-parameters</compilerArgument>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.mercury</groupId>
                <artifactId>commons-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.mercury</groupId>
                <artifactId>commons-concurrent</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- General data-binding functionality for Jackson: works on core streaming API -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- Core annotations used for value types, used by Jackson data binding package. -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- Core Jackson processing abstractions (aka Streaming API),
                 implementation for JSON -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- Add-on module for Jackson (http://jackson.codehaus.org) to support
                JDK 8 data types. -->
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk8</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- Add-on module to support JSR-310 (Java 8 Date & Time API) data types. -->
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- Add-on datatype-support module for Jackson (https://github.com/FasterXML/jackson)
                that handles eclipse-collections (https://www.eclipse.org/collections/) types -->
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-eclipse-collections</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- Add-on module for Jackson (http://jackson.codehaus.org) to support
                introspection of method/constructor parameter names, without having to add
                explicit property name annotation. -->
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-parameter-names</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- Netty/Buffer -->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-buffer</artifactId>
                <version>${netty.version}</version>
            </dependency>

            <!-- Netty/Codec -->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec</artifactId>
                <version>${netty.version}</version>
            </dependency>

            <!-- Netty/Handler -->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-handler</artifactId>
                <version>${netty.version}</version>
            </dependency>

            <!-- Zero-allocation implementations of fast non-cryptographic hash functions
                for byte sequences or blocks of memory -->
            <dependency>
                <groupId>net.openhft</groupId>
                <artifactId>zero-allocation-hashing</artifactId>
                <version>0.16</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>