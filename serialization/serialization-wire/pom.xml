<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>io.mercury</groupId>
		<artifactId>serialization</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<artifactId>serialization-wire</artifactId>
	<name>serialization-wire</name>

	<properties>
		<chronicle-core.version>2.21.94</chronicle-core.version>
		<chronicle-bytes.version>2.21.92</chronicle-bytes.version>
		<chronicle-threads.version>2.21.87</chronicle-threads.version>
		<chronicle-wire.version>2.21.93</chronicle-wire.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>io.mercury</groupId>
			<artifactId>commons-core</artifactId>
		</dependency>

		<dependency>
			<groupId>io.mercury</groupId>
			<artifactId>serialization-json</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- ####### chronicle-core ####### -->
		<!-- Low level access to native memory, JVM and OS. -->
		<dependency>
			<groupId>net.openhft</groupId>
			<artifactId>chronicle-core</artifactId>
			<version>${chronicle-core.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- ####### chronicle-bytes ####### -->
		<!-- Chronicle Bytes contains all the low level memory access wrappers.It 
			is built on Chronicle Core’s direct memory and OS system call access. Chronicle 
			Bytes has a similar purpose to Java NIO’s ByteBuffer with some extensions. -->
		<dependency>
			<groupId>net.openhft</groupId>
			<artifactId>chronicle-bytes</artifactId>
			<version>${chronicle-bytes.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- ####### chronicle-threads ####### -->
		<!-- This library provide a high performance thread pool. This thread pool 
			is design to share blocking, monitoring and busy waiting threads. Busy waiting 
			tasks can be prioritised for HIGH, MEDIUM, DAEMON (low priority) as well 
			as TIMER (fixed rate events) tasks in a single thread without creating garbage. -->
		<dependency>
			<groupId>net.openhft</groupId>
			<artifactId>chronicle-threads</artifactId>
			<version>${chronicle-threads.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- ####### chronicle-wire ####### -->
		<!-- A Java serialization Library that supports multiple formats. -->
		<dependency>
			<groupId>net.openhft</groupId>
			<artifactId>chronicle-wire</artifactId>
			<version>${chronicle-wire.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

	</dependencies>
</project>
