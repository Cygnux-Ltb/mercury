<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.mercury</groupId>
        <artifactId>serialization</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>serialization-wire</artifactId>
    <name>serialization-wire</name>

    <properties>
        <chronicle-core.version>2.23.35</chronicle-core.version>
        <chronicle-bytes.version>2.23.30</chronicle-bytes.version>
        <chronicle-threads.version>2.23.25</chronicle-threads.version>
        <chronicle-analytics.version>2.23.2</chronicle-analytics.version>
        <chronicle-wire.version>2.23.39</chronicle-wire.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.mercury</groupId>
            <artifactId>commons-concurrent</artifactId>
        </dependency>

        <dependency>
            <groupId>io.mercury</groupId>
            <artifactId>serialization-json</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- ####### Chronicle-Analytics ####### -->
        <!-- This library provides remote ingress to Google Analytics 4,
            allowing data, such as usage-statistics, to be collected for Java applications.
            The data can subsequently be analysed using a variety of tools available from
            Google and other providers. -->
        <dependency>
            <groupId>net.openhft</groupId>
            <artifactId>chronicle-analytics</artifactId>
            <version>${chronicle-analytics.version}</version>
        </dependency>

        <!-- ####### chronicle-core ####### -->
        <!-- Low level access to native memory, JVM and OS. -->
        <dependency>
            <groupId>net.openhft</groupId>
            <artifactId>chronicle-core</artifactId>
            <version>${chronicle-core.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>chronicle-analytics</artifactId>
                    <groupId>net.openhft</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- ####### chronicle-bytes ####### -->
        <!-- Chronicle Bytes contains all the low level memory access wrappers.
            It is built on Chronicle Core’s direct memory and OS system call access.
            Chronicle Bytes has a similar purpose to Java NIO’s
            ByteBuffer with some extensions. -->
        <dependency>
            <groupId>net.openhft</groupId>
            <artifactId>chronicle-bytes</artifactId>
            <version>${chronicle-bytes.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>chronicle-core</artifactId>
                    <groupId>net.openhft</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- ####### chronicle-threads ####### -->
        <!-- This library provide a high performance thread pool. This thread pool
            is design to share blocking, monitoring and busy waiting threads. Busy waiting
            tasks can be prioritised for HIGH, MEDIUM, DAEMON (low priority) as well
            as TIMER (fixed rate events) tasks in a single thread without creating garbage. -->
        <dependency>
            <groupId>net.openhft</groupId>
            <artifactId>chronicle-threads</artifactId>
            <version>${chronicle-threads.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>chronicle-core</artifactId>
                    <groupId>net.openhft</groupId>
                </exclusion>
            </exclusions>
        </dependency>


        <!-- ####### chronicle-wire ####### -->
        <!-- A Java serialization Library that supports multiple formats. -->
        <dependency>
            <groupId>net.openhft</groupId>
            <artifactId>chronicle-wire</artifactId>
            <version>${chronicle-wire.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>net.openhft</groupId>
            <artifactId>chronicle-ticker</artifactId>
            <version>2.23.3</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-api</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>
</project>
